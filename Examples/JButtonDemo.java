package Examples;


import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class JButtonDemo{

	private JTextField countField = null;
	private MyListener buttonListener = new MyListener();
	private JButton addOne = null;
	private JButton addTwo  = null;
	private JPanel panel = null;
	private JTextArea area = null;
	private static JFrame frame = null;
	
	public JPanel createGUI() {
	
		panel = new JPanel();

		JLabel label = new JLabel("Click Count - ");
		panel.add(label);

		countField = new JTextField();
		countField.setText("00");
		Font f = new Font("Roman", Font.BOLD, 16);
		countField.setFont(f);
		countField.setEditable(false);
		countField.addMouseListener(new MyMouseListener());
		panel.add(countField);

		// Button "Add 1"
		// https://docs.oracle.com/javase/7/docs/api/javax/swing/JButton.html
		// https://docs.oracle.com/javase/tutorial/uiswing/components/button.html
		addOne = new JButton("Add One");
		addOne.setName("addOne");
		/*
		 *  buttonListener - is the listener which is going to accept & process 
		 *  the events generated by addOne button 
		 *  buttonListener - is of type MyListener which implements ActionListener
		 */
		addOne.addActionListener(buttonListener);
		panel.add(addOne);
		
		addTwo = new JButton("Add Two");
		addTwo.setName("addTwo");
		addTwo.addMouseListener(new MyMouseListener());
		addTwo.addActionListener(buttonListener);
		panel.add(addTwo);
		
		// Text Area.
		// https://docs.oracle.com/javase/tutorial/uiswing/components/textarea.html
		// https://docs.oracle.com/javase/7/docs/api/javax/swing/JTextArea.html
		area = new JTextArea(5,20);
		area.addKeyListener(new MyKeyListener());
		// If the test goes beyond the area, wrap it to next line
		area.setLineWrap(true);
		// Add a scrolling to the text area. If the #of line is more than 5, 
		// the scroll will be added to the text area.
		JScrollPane p = new JScrollPane(area);
		
		panel.add(p);
		
		return panel;
	}

	/*
	 *  The listener class accepts and process events on Text Area - area
	 *  Implements KeyListener
	 *  https://docs.oracle.com/javase/tutorial/uiswing/events/keylistener.html
	 *  https://docs.oracle.com/javase/7/docs/api/java/awt/event/KeyListener.html
	 */
	public class MyKeyListener implements KeyListener{
		//Invoked when a key is pressed on the keyboard
		@Override
		public void keyPressed(KeyEvent e) {
			char c = e.getKeyChar();
			JOptionPane.showMessageDialog(frame, "Key Char pressed is - "+c, 
					"Key Pressed", JOptionPane.INFORMATION_MESSAGE);
		}

		@Override
		public void keyReleased(KeyEvent e) {
		}

		@Override
		public void keyTyped(KeyEvent e) {
		}

		
	}
	/*
	 *  The listener class accepts and process events from two buttons - addOne & addTwo 
	 *  Implements ActionListener
	 *  https://docs.oracle.com/javase/tutorial/uiswing/events/actionlistener.html
	 *  https://docs.oracle.com/javase/7/docs/api/java/awt/event/ActionListener.html
	 */
	public class MyListener implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			JButton source = (JButton)e.getSource();
			String sourceName = source.getName();
			int c = new Integer(countField.getText()).intValue();
			if(sourceName.equals("addOne")){
				c++;
				countField.setText(new Integer(c).toString());
			}else if(sourceName.equals("addTwo")){
				c+=2;
				countField.setText(new Integer(c).toString());
			}
		}
		
	}
	
	/*
	 *  The mouse listener class accepts and process events on addTwo button
	 *  Implements MouseListener
	 *  https://docs.oracle.com/javase/tutorial/uiswing/events/mouselistener.html
	 *  https://docs.oracle.com/javase/7/docs/api/java/awt/event/MouseListener.html
	 */
	public class MyMouseListener implements MouseListener{

		// Invoked when a mouse is pressed. In this case, clicked on addTwo button
		@Override
		public void mouseClicked(MouseEvent e) {
		}

		@Override
		public void mousePressed(MouseEvent e) {
		}

		@Override
		public void mouseReleased(MouseEvent e) {
		}
		
		// Invoked when the mouse enters the UI element. In this case, mouse enter addTwo button
		@Override
		public void mouseEntered(MouseEvent e) {
			addTwo.setBackground(Color.LIGHT_GRAY);
		}
		// Invoked when the mouse exists from the UI element. In this case, mouse exists the addTwo button
		@Override
		public void mouseExited(MouseEvent e) {
			addTwo.setBackground(Color.WHITE);
		}

	}
	
	private static void createAndShowGUI() {
        //Create and set up the window.
        frame = new JFrame("Button & Listener Demo");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        frame.add(new JButtonDemo().createGUI());

        //Display the window.
        frame.setSize(450, 260);
        frame.setVisible(true);
    }

	
	public static void main(String[] args) {
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                createAndShowGUI();
            }
        });
    }
	
}
